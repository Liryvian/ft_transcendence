services:
    frontend:
        container_name: 'frontend_${COMPOSE_PROJECT_NAME:-ts}'
        build:
            context: ./frontend
            dockerfile: Dockerfile
        volumes:
            - ./frontend/src:/usr/src/app/src:ro
            - ./frontend/shared:/usr/src/app/shared:ro
            - ./frontend/public:/usr/src/app/public:ro
        restart: unless-stopped
        env_file:
            - .env

    backend:
        container_name: 'backend_${COMPOSE_PROJECT_NAME:-ts}'
        build:
            context: ./backend
            dockerfile: Dockerfile
        volumes:
            - ./backend/src:/src/app/src:ro
            - ./backend/test:/src/app/test:ro
            - ./backend/shared:/src/app/shared:ro
            - ./backend/public:/src/app/public:rw
            - ./backend/.env.test:/src/app/.env.test:ro
        restart: unless-stopped
        env_file:
            - .env
        depends_on:
            - database

    database:
        container_name: 'database_${COMPOSE_PROJECT_NAME:-ts}'
        command: postgres -c stats_temp_directory=/tmp
        image: postgres:14
        restart: always
        env_file:
            - .env
        volumes:
            - .db:/var/lib/postgresql/data:rw
        ports:
            - 5432:5432

    adminer:
        container_name: 'adminer_${COMPOSE_PROJECT_NAME:-ts}'
        image: adminer:4.8.1-standalone
        restart: always

    nginx:
        container_name: 'nginx_${COMPOSE_PROJECT_NAME:-ts}'
        image: nginx:1.23-alpine
        restart: unless-stopped
        volumes:
            - type: bind
              source: ./nginx/reverse_proxy.conf
              target: /etc/nginx/conf.d/default.conf
              read_only: false
        command: [nginx-debug, '-g', 'daemon off;']
        env_file:
            - .env
        ports:
            - 8080:8080
            - 8123:8123
        depends_on:
            - frontend
            - backend

volumes:
    .db:
