worker_processes 1;

events {
  worker_connections 1024;
  accept_mutex off;
  use epoll;
}

http {
	include mime.types;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

	server {
		client_max_body_size 1M;

		listen 8080 default_server;
	    listen [::]:8080;

	    server_name 127.0.0.1;

	 	location /socket.io/ {
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;

			set $upstream backend:3000;
			proxy_pass $upstream;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
	    }

		location /api/ {
			set $upstream backend;

			proxy_pass http://$upstream;
			rewrite /api/(.*) /$1 break;
		}

		location / {
			set $upstream frontend;

			proxy_pass http://$upstream;

			# resolver 127.0.0.11 valid=5m;
			proxy_set_header Host $host;

	        proxy_set_header X-Real-IP $remote_addr;
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
			proxy_set_header X_Forwarded-For $proxy_add_x_forwarded_for;
		}
	}
}
# curl "http://backend:3000/socket.io/?EIO=4&transport=polling"
# to reach socket from frontend
